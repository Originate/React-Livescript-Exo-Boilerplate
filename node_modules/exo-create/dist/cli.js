// Generated by LiveScript 1.5.0
var abbrev, red, fs, path, map, entityName, commandHandlerPath;
abbrev = require('abbrev');
red = require('chalk').red;
fs = require('fs');
path = require('path');
map = require('prelude-ls').map;
console.log('We are about to create a new Exosphere application\n');
entityName = process.argv[2];
if (!entityName) {
  return missingEntity();
}
commandHandlerPath = __dirname + "/entities/" + abbrev(entityNames())[entityName] + ".js";
fs.access(commandHandlerPath, function(err){
  switch (false) {
  case !err:
    return unknownCommand(entityName);
  }
  return require(commandHandlerPath);
});
function missingEntity(){
  console.log(red("Error: missing entity for 'create' command\n"));
  return printUsage();
}
function unknownCommand(entity){
  console.log(red("Error: cannot create '" + entityName + "'\n"));
  return printUsage();
}
function printUsage(){
  var i$, ref$, len$, entity;
  console.log('Usage: exo create [<entity>] [<name>] [<template>] [<model>] [<description>]\n');
  console.log('Available entities are:');
  for (i$ = 0, len$ = (ref$ = entityNames()).length; i$ < len$; ++i$) {
    entity = ref$[i$];
    console.log("* " + entity);
  }
  return console.log();
}
function entityNames(){
  var this$ = this;
  return map(function(it){
    return it.replace(/\.js$/, '');
  })(
  fs.readdirSync(path.join(__dirname, 'entities')));
}