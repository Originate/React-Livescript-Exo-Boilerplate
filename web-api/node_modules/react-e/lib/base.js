// Generated by LiveScript 1.5.0
var assign, react, slice$ = [].slice;
assign = require('lodash.assign');
react = require('react');
module.exports = function(classnames){
  return function(elementStr, opts){
    var children, res$, i$, to$, ref$, elementTag, classes, clonedOpts;
    opts == null && (opts = {});
    res$ = [];
    for (i$ = 2, to$ = arguments.length; i$ < to$; ++i$) {
      res$.push(arguments[i$]);
    }
    children = res$;
    ref$ = elementStr.split('.'), elementTag = ref$[0], classes = slice$.call(ref$, 1);
    if (!(opts instanceof Object) || opts instanceof Array || opts.$$typeof != null) {
      children = [opts].concat(slice$.call(children));
      opts = {};
    }
    clonedOpts = assign({}, opts);
    clonedOpts.className = classnames(classes, clonedOpts.className);
    if (!clonedOpts.className) {
      delete clonedOpts.className;
    }
    return (ref$ = react.DOM)[elementTag || 'div'].apply(ref$, [clonedOpts].concat(slice$.call(children)));
  };
};