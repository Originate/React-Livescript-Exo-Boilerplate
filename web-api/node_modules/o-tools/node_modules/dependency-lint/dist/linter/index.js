(function() {
  var DependencyLinter, InstalledModuleValidater, Linter, UsedModuleFinder, _, fsExtra, path;

  _ = require('lodash');

  DependencyLinter = require('./dependency_linter');

  fsExtra = require('fs-extra');

  InstalledModuleValidater = require('./installed_module_validator');

  path = require('path');

  UsedModuleFinder = require('./used_module_finder');

  Linter = (function() {
    function Linter(config) {
      this.dependencyLinter = new DependencyLinter(config);
      this.installedModuleValidater = new InstalledModuleValidater;
      this.usedModuleFinder = new UsedModuleFinder(config);
    }

    Linter.prototype.lint = function(dir, done) {
      return this.readPackageJson(dir, (function(_this) {
        return function(err, packageJson) {
          if (err) {
            return done(err);
          }
          return _this.installedModuleValidater.validate({
            dir: dir,
            packageJson: packageJson
          }, function(err) {
            if (err) {
              return done(err);
            }
            return _this.usedModuleFinder.find({
              dir: dir,
              packageJson: packageJson
            }, function(err, usedModules) {
              var listedModules, result;
              if (err) {
                return done(err);
              }
              listedModules = _this.getListedModules(packageJson);
              result = _this.dependencyLinter.lint({
                listedModules: listedModules,
                usedModules: usedModules
              });
              return done(null, result);
            });
          });
        };
      })(this));
    };

    Linter.prototype.readPackageJson = function(dir, done) {
      var filePath;
      filePath = path.join(dir, 'package.json');
      return fsExtra.readJson(filePath, done);
    };

    Linter.prototype.getListedModules = function(packageJson) {
      var result;
      result = {};
      ['dependencies', 'devDependencies'].forEach(function(value) {
        return result[value] = _.keys(packageJson[value]);
      });
      return result;
    };

    return Linter;

  })();

  module.exports = Linter;

}).call(this);
